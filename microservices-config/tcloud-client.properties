server.port=${PORT:9999}

info.component=Tcloud Client with OAuth2 Sso

# Output MessageChannel
spring.cloud.stream.bindings.output.destination=tcloud

# Oauth2 Resource user endpoint
security.oauth2.resource.user-info-uri=http://localhost:9191/uaa/user

# Oauth2 Resource jwt token endpoint
#security.oauth2.resource.jwt.key-uri=http://localhost:9191/uaa/oauth/token_key
#security.oauth2.resource.id=tcloud

# Mandatory at false for OAuth2FeignConfig!
security.oauth2.resource.loadBalanced=false

# Active resource loadBalanced!
spring.oauth2.resource.loadBalanced=true


# Oauth2 Resource Client
#security.oauth2.client.client-id=acme
#security.oauth2.client.client-secret=acmesecret
#security.oauth2.client.access-token-uri=http://localhost:9191/uaa/oauth/token
#security.oauth2.client.user-authorization-uri=http://localhost:9191/uaa/oauth/authorize
#security.oauth2.client.client-authentication-scheme=header
#security.oauth2.client.authentication-scheme=form

# Protect against CSRF attack! (Only path /login working, but forcing a HTTPS redirect URL!)
#security.oauth2.client.use-current-uri=false
#security.oauth2.client.pre-established-redirect-uri=http://localhost:${server.port}/login
#security.oauth2.client.registered-redirect-uri=http://localhost:${server.port}/login

security.sessions=if_required
#security.enable-csrf=true
security.basic.enabled=false
#management.security.enabled=false

#ribbon.IsSecure=false
ribbon.ConnectTimeout=3000
ribbon.ReadTimeout=60000

hystrix.command.default.execution.isolation.thread.timeoutInMillisecond=60000
hystrix.command.default.execution.isolation.strategy=SEMAPHORE

eureka.client.enabled=true
eureka.client.healthcheck.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

logging.level.org.springframework.security.config.annotation.web.configuration=DEBUG
